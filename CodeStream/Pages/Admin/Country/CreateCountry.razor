@page "/admin/createCountry"
@inject ICountryRepository CountryRepository
@inject IJSRuntime JsRuntime
@inject NavigationManager navigationManager



@attribute [Authorize(Roles = "admin")]
<h3 class="text-center mt-4">Create Country</h3>

<div class="container mb-5 mt-2 ">
    <div class="card shadow-lg ">


        <div class="card-header fs-4 fw-bold">

            New Country
        </div>


        <div class="card-body">


            <EditForm Model="country" OnValidSubmit="OnSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="mb-3 ">
                    <label for="Name" class="form-label">Name</label>
                    <InputText @bind-Value="country.Name" type="text" class="form-control" id="Name" placeholder="Country name"></InputText>
                    <ValidationMessage class="text-danger form-text" For="() => country.Name"></ValidationMessage>
                </div>


              

                <button type="submit" class="btn btn-info text-white py-2 form-control fw-bold fs-5 my-1">Create Country</button>
            </EditForm>

        </div>



    </div>


</div>


@code {
    private FormCountryDTO country = new FormCountryDTO();


    private async Task OnSubmit()
    {

        var isCreated = await CountryRepository.CreateCountry(country);
        if (isCreated)
        {
            await JsRuntime.InvokeVoidAsync("showToastr", "success", "Pais Creado Correctamente");

            navigationManager.NavigateTo("/admin/countries");

        }
        else
        {
            await JsRuntime.InvokeVoidAsync("showToastr", "error", "Favor llenar los campos correctamente y no duplicar datos");
        }


    }


}