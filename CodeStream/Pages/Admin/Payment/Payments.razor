@page "/admin/payments"
@inject IPaymentRepository paymentRepository
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager

@attribute [Authorize(Roles = "admin")]
<h3 class="text-center mt-5">Payments</h3>



<div class="container mb-5">
  

    <table id="adminTable" class="table table-striped" style="width:100%">
        <thead>
            <tr>
                <th class="text-center">Id</th>
                <th class="text-center">User Id</th>
                <th class="text-center">Student Id</th>
                <th class="text-center">Name</th>
                <th class="text-center">Email</th>
                <th class="text-center">Phone</th>
                <th class="text-center">Country</th>
                <th class="text-center">Total Price</th>
                <th class="text-center">Date</th>
                <th class="text-center">Accions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var p in payment)
            {
                <tr>
                    <td class="text-center">@p.Id</td>
                    <td class="text-center">@p.UserId</td>
                    <td class="text-center">@p.StudentId</td>
                    <td class="text-center">@p.Name</td>
                    <td class="text-center">@p.Email</td>
                    <td class="text-center">@p.Phone</td>
                    <td class="text-center">@p.Country</td>
                    <td class="text-center">@p.TotalPrice.ToString("#,0.00")</td>
                    <td class="text-center">@p.Date.ToShortDateString()</td>
                    <td>

                        <div class="text-center">
                            <i @onclick="@(()=> navigationManager.NavigateTo($"/invoice/{p.Id}"))" type="button" class="fa-solid fa-magnifying-glass"></i>
                        </div>

                    </td>

                </tr>
            }
        </tbody>

    </table>
</div>
@code {
    private List<AdminPaymentListDTO> payment = new List<AdminPaymentListDTO>();

    protected override async Task OnInitializedAsync()
    {
        payment = await paymentRepository.GetAdminPaymentListDTOs();


    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
    

        await Task.Delay(100);

        await JSRuntime.InvokeVoidAsync("DataTable");

    }

  


}
